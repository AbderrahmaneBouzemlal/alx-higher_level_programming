The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
	 >>> m = __import__("2-matrix_divided").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
     >>> len(f) > 1
     True

Checking regular matrix:
     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> print(matrix_divided(matrix, 3))
     [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
     >>> print(matrix)
     [[1, 2, 3], [4, 5, 6]]

Checking one matrix:
    >>> matrix = [[1, 2, 3]]
    >>> print(matrix_divided(matrix, 1))
    [[1.0, 2.0, 3.0]]
    >>> print(matrix)
    [[1, 2, 3]]

Checking one matrix:
    >>> matrix = [["hello", "World", 3]]
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
Checking for different length of a lists:
    >>> matrix = [[1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5]]
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Checking for div to be a number:
    >>> matrix = [[1, 2, 3], [23, 0, 4], [8, 4, 5]]
    >>> matrix_divided(matrix, True)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Checking for div to be a number But not zero:
    >>> matrix = [[1, 2, 3], [23, 0, 4], [8, 4, 5]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero